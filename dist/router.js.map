{"version":3,"sources":["config.ts","router.ts"],"names":[],"mappings":";AAEa,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,OAAkB,CAC7B,SAAU,CACR,KAAM,KACN,QAAS,KAEX,MAAO,CACL,SAAU,CACR,QAAS,eACT,KAAM,kCAER,OAAQ,CACN,UAAW,2BAGf,UAAW,CACT,MAAO,GACP,SAAU,IACV,UAAW;;AC8Ef,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IA9FA,IAAA,EAAA,QAAA,YAKA,EAAA,WAAA,SAAA,KAUA,OATE,EAAA,UAAA,QAAA,SAAS,EAAe,GACf,MAAA,IAKT,EAAA,UAAA,MAAA,SAAO,EAAe,GACb,OAAA,GAEX,EAVA,GAYA,EAAA,WAUE,SAAA,EAAa,GACN,KAAA,OAAS,OAAO,OAAO,EAAK,QAAU,GAAI,EAAA,QAC1C,KAAA,OAAS,EAAK,OACd,KAAA,SAAU,EAEf,OAAO,eAAe,KAAM,WAAY,CACtC,IAAK,WACI,MAAA,CACL,KAAM,OAAO,SAAS,KACtB,KAAM,OAAO,SAAS,OAG1B,IAAK,SAAC,GACJ,OAAO,QAAQ,UAAU,KAAM,KAAM,MAIpC,KAAA,gBAAkB,eAAgB,QAgD3C,OA7CE,EAAA,UAAA,MAAA,WACM,KAAK,SACH,KAAK,QAAU,KAAK,OAAO,aACxB,KAAA,OAAO,WAAW,CACrB,OAAQ,KACR,SAAU,KAAK,SACf,SAAU,KAAK,WAGZ,KAAA,SAAW,KAAK,WAK3B,EAAA,UAAA,MAAA,WACO,KAAK,UACH,KAAA,SAAU,EACX,KAAK,QAAU,KAAK,OAAO,SACxB,KAAA,OAAO,QAAQ,CAClB,OAAQ,OAGR,KAAK,cACP,YAAY,KAAK,MAAO,KAAK,OAAO,UAAU,UAE9C,OAAO,iBAAiB,WAAY,KAAK,MAAM,KAAK,SAK1D,EAAA,UAAA,KAAA,WACM,KAAK,UACF,KAAA,SAAU,EACX,KAAK,QAAU,KAAK,OAAO,QACxB,KAAA,OAAO,OAAO,CACjB,OAAQ,OAGR,KAAK,cACP,OAAO,oBAAoB,WAAY,KAAK,OAE5C,cAAc,KAAK,eAI3B,EA3EA,GA6EA,OAAO,QAAU","file":"router.js","sourceRoot":"../src","sourcesContent":["import { IConfig } from './interfaces/config';\n\nexport const Config: IConfig = {\n  settings: {\n    hash: '#!',\n    timeout: 5000\n  },\n  regex: {\n    settings: {\n      default: /[a-zA-Z0-9]/g,\n      href: /(www|http:|https:)+[^\\s]+[\\w]/g,\n    },\n    routes: {\n      variables: /(:(?!qargs)[a-zA-Z]*)/g\n    }\n  },\n  intervals: {\n    start: 10,\n    listener: 250,\n    fragments: 250\n  }\n};\n","import { IRouterClient, IRouterTools, IRouterArgs, IRouter } from './interfaces/router';\nimport { IRouterLocation } from './interfaces/event';\nimport { IConfig } from './interfaces/config';\nimport { Config } from './config';\n\n// TODO: add documentation\n\n// TODO: complete router tools and implement in router\nclass RouterTools implements IRouterTools {\n  process (route: string, source: string) {\n    return {\n\n    };\n  }\n\n  match (route: string, source: string) {\n    return false;\n  }\n}\n\nclass Router implements IRouter {\n  public config: IConfig;\n  public location: IRouterLocation;\n  public previous: IRouterLocation;\n  public tools: IRouterTools;\n  public running: boolean;\n  public legacySupport: boolean;\n  public listenerKey?: number;\n  public client?: IRouterClient;\n\n  constructor (args: IRouterArgs) {\n    this.config = Object.assign(args.config || {}, Config);\n    this.client = args.client;\n    this.running = false;\n\n    Object.defineProperty(this, 'location', {\n      get: () => {\n        return {\n          hash: window.location.hash,\n          href: window.location.href\n        };\n      },\n      set: (location: string) => {\n        window.history.pushState(null, null, location);\n      }\n    });\n\n    this.legacySupport = !('onpopstate' in window);\n  }\n\n  watch () {\n    if (this.running) {\n      if (this.client && this.client.onNavigate) {\n        this.client.onNavigate({\n          router: this,\n          location: this.location,\n          previous: this.previous,\n        });\n\n        this.previous = this.location;\n      }\n    }\n  }\n\n  start () {\n    if (!this.running) {\n      this.running = true;\n      if (this.client && this.client.onStart) {\n        this.client.onStart({\n          router: this,\n        });\n      }\n      if (this.legacySupport) {\n        setInterval(this.watch, this.config.intervals.listener);\n      } else {\n        window.addEventListener('popstate', this.watch.bind(this));\n      }\n    }\n  }\n\n  stop () {\n    if (this.running) {\n      this.running = false;\n      if (this.client && this.client.onStop) {\n        this.client.onStop({\n          router: this,\n        });\n      }\n      if (this.legacySupport) {\n        window.removeEventListener('popstate', this.watch);\n      } else {\n        clearInterval(this.listenerKey);\n      }\n    }\n  }\n}\n\nmodule.exports = Router;\n"]}